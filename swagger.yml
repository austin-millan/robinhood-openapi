openapi: 3.0.0
info:
  description: Robinhood API Documentation
  version: 3.0.1
  title: Robinhood API
  contact:
    email: austin.millan@gmail.com
servers:
  - url: http://api.robinhood.com
  - url: https://api.robinhood.com
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: accounts
    description: Accounts
  - name: authentication
    description: Authentication
  - name: dividends
    description: Dividends
  - name: fundamentals
    description: Fundamentals
  - name: instruments
    description: Instruments
  - name: markets
    description: Markets
  - name: movers
    description: Movers
  - name: order
    description: Order
  - name: quote
    description: Quote
  - name: user
    description: User
  - name: watchlists
    description: Watchlists
paths:
  "/accounts/":
    get:
      tags:
        - accounts
      summary: getAll
      operationId: getAllUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfAccountInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/accounts/{accountId}/portfolio/':
    get:
      tags:
        - accounts
      summary: getPortFolio
      operationId: getPortFolioUsingGET
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/accounts/{accountId}/positions/':
    get:
      tags:
        - accounts
      summary: getAllPositions
      operationId: getAllPositionsUsingGET
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          schema:
            type: string
        - name: nonzero
          in: query
          description: nonzero
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfPosition'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/accounts/{accountId}/positions/{positionId}/':
    get:
      tags:
        - accounts
      summary: getPosition
      operationId: getPositionUsingGET
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          schema:
            type: string
        - name: positionId
          in: path
          description: positionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api-token-auth/:
    post:
      tags:
        - authentication
      summary: login
      operationId: loginUsingPOST
      parameters:
        - name: mfa_code
          in: header # used to be requestData
          description: mfa_code
          required: false
          schema:
            type: string
        - in: header # used to be formData
          name: password
          description: password
          required: true
          schema:
            type: string
        - in: header # used to be formData
          name: username
          description: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api-token-logout/:
    post:
      tags:
        - authentication
      summary: logout
      operationId: logoutUsingPOST
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/dividends/{id}/':
    get:
      tags:
        - dividends
      summary: getDividend
      operationId: getDividendUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /fundamentals/:
    get:
      tags:
        - fundamentals
      summary: query
      operationId: queryUsingGET
      parameters:
        - name: symbols
          in: query
          description: symbols
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfFundamentalsData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/fundamentals/{symbol}/':
    get:
      tags:
        - fundamentals
      summary: getFundamentals
      operationId: getFundamentalsUsingGET
      parameters:
        - name: symbol
          in: path
          description: symbol
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundamentalsData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /instruments:
    get:
      tags:
        - instruments
      summary: getAll
      operationId: getAllUsingGET_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfInstrumentData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /instruments/:
    get:
      tags:
        - instruments
      summary: query
      operationId: queryUsingGET_1
      parameters:
        - name: query
          in: query
          description: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfInstrumentData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/instruments/{instrument_id}/':
    get:
      tags:
        - instruments
      summary: get
      operationId: getUsingGET
      parameters:
        - name: instrument_id
          in: path
          description: instrument_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/instruments/{instrument_id}/splits/':
    get:
      tags:
        - instruments
      summary: getSplits
      operationId: getSplitsUsingGET
      parameters:
        - name: instrument_id
          in: path
          description: instrument_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfInstrumentSplit'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /markets:
    get:
      tags:
        - markets
      summary: getAll
      operationId: getAllUsingGET_2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfMarketData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/markets/{mic}/hours/{date}/':
    get:
      tags:
        - markets
      summary: getMArketHours
      operationId: getMArketHoursUsingGET
      parameters:
        - name: date
          in: path
          description: date
          required: true
          schema:
            type: string
        - name: mic
          in: path
          description: mic
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketHours'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /midlands/movers/sp500/:
    get:
      tags:
        - movers
      summary: getMovers
      operationId: getMoversUsingGET
      parameters:
        - name: direction
          in: query
          description: direction
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfMovers'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /orders/:
    get:
      tags:
        - order
      summary: getAll
      operationId: getAllUsingGET_3
      parameters:
        - name: cursonr
          in: query
          description: cursonr
          required: false
          schema:
            type: string
        - name: instrument
          in: query
          description: instrument
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: updated_at
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfOrder'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - order
      summary: placeOrder
      operationId: placeOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/orders/{order_id}/':
    get:
      tags:
        - order
      summary: getOrder
      operationId: getOrderUsingGET
      parameters:
        - name: order_id
          in: path
          description: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/orders/{order_id}/cancel/':
    post:
      tags:
        - order
      summary: cancel
      operationId: cancelUsingPOST
      parameters:
        - name: order_id
          in: path
          description: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /quotes/:
    get:
      tags:
        - quote
      summary: getQuotes
      operationId: getQuotesUsingGET
      parameters:
        - name: symbols
          in: query
          description: symbols
          required: false
          schema:
            type: string
            example: 'TSLA,AMD'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfQuoteData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/quotes/{symbol}/':
    get:
      tags:
        - quote
      summary: getQuote
      operationId: getQuoteUsingGET
      parameters:
        - name: symbol
          in: path
          description: symbol
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/:
    get:
      tags:
        - user
      summary: getUser
      operationId: getUserUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/basic_info/:
    get:
      tags:
        - user
      summary: getBasicInfo
      operationId: getBasicInfoUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/id/:
    get:
      tags:
        - user
      summary: getUserId
      operationId: getUserIdUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/investment_profile/:
    get:
      tags:
        - user
      summary: getInvestmentProfile
      operationId: getInvestmentProfileUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentProfile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /watchlists/:
    get:
      tags:
        - watchlists
      summary: getAll
      operationId: getAllUsingGET_4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfWatchListCreateResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - watchlists
      summary: create
      operationId: createUsingPOST
      parameters:
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchListCreateResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /watchlists/Default/bulk_add/:
    post:
      tags:
        - watchlists
      summary: add
      operationId: addUsingPOST
      parameters:
        - name: symbols
          in: query
          description: symbols
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchListsData'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/watchlists/{name}/':
    get:
      tags:
        - watchlists
      summary: get
      operationId: getUsingGET_1
      parameters:
        - name: name
          in: path
          description: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfWatchListsData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/watchlists/{name}/{instrumentId}':
    delete:
      tags:
        - watchlists
      summary: delete
      operationId: deleteUsingDELETE
      parameters:
        - name: instrumentId
          in: path
          description: instrumentId
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleOfWatchListsData'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
components:
  schemas:
    AccountInfo:
      properties:
        account_number:
          type: string
        buying_power:
          format: double
          type: number
        cash:
          format: double
          type: number
        cash_available_for_withdrawal:
          format: double
          type: number
        cash_balances:
          $ref: '#/components/schemas/CashBalances'
        cash_held_for_orders:
          format: double
          type: number
        created_at:
          format: date-time
          type: string
        deactivated:
          type: boolean
        deposit_halted:
          type: boolean
        margin_balances:
          $ref: '#/components/schemas/MarginBalances'
        max_ach_early_access_amount:
          format: double
          type: number
        only_position_closing_trades:
          type: boolean
        portfolio:
          type: string
        positions:
          type: string
        sma:
          format: double
          type: number
        sma_held_for_orders:
          format: double
          type: number
        sweep_enabled:
          type: boolean
        type:
          $ref: '#/components/schemas/AccountType'
        uncleared_deposits:
          format: double
          type: number
        unsettled_funds:
          format: double
          type: number
        updated_at:
          format: date-time
          type: string
        url:
          type: string
        user:
          type: string
        withdrawal_halted:
          type: boolean
      title: AccountInfo
      type: object
    AccountType:
      enum:
        - cash
        - margin
      title: type
      type: string
    Auth:
      properties:
        mfa_required:
          type: string
        mfa_type:
          type: string
        token:
          type: string
      type: object
    AuthResponse:
      $ref: '#/components/schemas/Auth'
    BasicInfo:
      properties:
        address:
          type: string
        citizenship:
          type: string
        city:
          type: string
        country_of_residence:
          type: string
        date_of_birth:
          type: string
        marital_status:
          $ref: '#/components/schemas/MaritalStatus'
        number_dependents:
          format: int32
          type: integer
        phone_number:
          type: string
        state:
          type: string
        tax_id_ssn:
          type: string
        updated_at:
          format: date-time
          type: string
        user:
          type: string
        zipcode:
          type: string
      title: BasicInfo
      type: object
    CashBalances:
      properties:
        buying_power:
          format: double
          type: number
        cash:
          format: double
          type: number
        cash_available_for_withdrawal:
          format: double
          type: number
        cash_held_for_orders:
          format: double
          type: number
        created_at:
          format: date-time
          type: string
        uncleared_deposits:
          format: double
          type: number
        unsettled_funds:
          format: double
          type: number
        updated_at:
          format: date-time
          type: string
      title: CashBalances
      type: object
    CryptoAccount:
      properties:
        id:
          title: id
          type: string
        status:
          type: string
        user_id:
          title: user_id
          type: string
      type: object
    CryptoAssetCurrency:
      properties:
        brand_color:
          type: string
        code:
          type: string
        id:
          title: ID
          type: string
        increment:
          title: increment
          type: string
        name:
          title: string
      type: object
    CryptoCurrencyPair:
      properties:
        asset_currency:
          $ref: '#/components/schemas/CryptoAssetCurrency'
          title: asset_currency
        id:
          title: ID
          type: string
        max_order_size:
          type: string
        min_order_price_increment:
          type: string
        min_order_size:
          title: min_order_size
          type: string
        name:
          type: string
        quote_currency:
          $ref: '#/components/schemas/QuoteCurrency'
          title: quote_currency
        symbol:
          type: string
        tradability:
          type: string
      type: object
    CryptoOrder:
      properties:
        account_id:
          title: account_id
          type: string
        currency_pair_id:
          title: currency_pair_id
          type: string
        price:
          format: double
          type: number
        quantity:
          format: double
          type: number
        ref_id:
          title: ref_id
          type: string
        side:
          type: string
        time_in_force:
          title: time_in_force
          type: string
        type:
          title: type
          type: string
      type: object
    CryptoOrderOptions:
      properties:
        account:
          title: account
          type: string
        average_price:
          format: double
          type: number
        cancel:
          title: cancel
          type: string
        created_at:
          type: string
        cumulative_quantity:
          type: string
        currency_pair_id:
          type: string
        executions:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        id:
          title: id
          type: string
        last_transaction_at:
          type: string
        price:
          type: string
        quantity:
          type: string
        reject_reason:
          type: string
        side:
          type: string
        state:
          type: string
        stop_price:
          title: stop_price
          type: string
        time_in_force:
          title: time_in_force
          type: string
        type:
          title: type
          type: string
      type: object
    CryptoOrderOutput:
      properties:
        account:
          title: account
          type: string
        average_price:
          format: double
          type: number
        cancel:
          title: cancel
          type: string
        created_at:
          type: string
        cumulative_quantity:
          type: string
        currency_pair_id:
          type: string
        executions:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        id:
          title: id
          type: string
        last_transaction_at:
          type: string
        price:
          type: string
        quantity:
          type: string
        reject_reason:
          type: string
        side:
          type: string
        state:
          type: string
        stop_price:
          title: stop_price
          type: string
        time_in_force:
          title: time_in_force
          type: string
        type:
          title: type
          type: string
      type: object
    CryptoPortfolio:
      properties:
        account_id:
          type: string
        equity:
          type: string
        extended_hours_equity:
          type: string
        extended_hours_market_value:
          type: string
        id:
          title: id
          type: string
      title: CryptoPortfolio
      type: object
    Execution:
      properties:
        id:
          type: string
        price:
          type: string
        quantity:
          type: string
        settlement_date:
          format: date
          type: string
        timestamp:
          format: date-time
          type: string
      title: Execution
      type: object
    ExecutionType:
      enum:
        - market
        - limit
      type: string
    FundamentalsData:
      properties:
        average_volume:
          format: double
          type: number
        description:
          type: string
        dividend_yield:
          format: double
          type: number
        high:
          format: double
          type: number
        high_52_weeks:
          format: double
          type: number
        instrument:
          type: string
        low:
          format: double
          type: number
        low_52_weeks:
          format: double
          type: number
        market_cap:
          format: double
          type: number
        open:
          format: double
          type: number
        pe_ratio:
          format: double
          type: number
        volume:
          format: double
          type: number
      title: FundamentalsData
      type: object
    InstrumentData:
      properties:
        bloomberg_unique:
          type: string
        country:
          type: string
        day_trade_ratio:
          format: double
          type: number
        fundamentals:
          type: string
        id:
          type: string
        list_date:
          type: string
        maintenance_ratio:
          format: double
          type: number
        margin_initial_ratio:
          format: double
          type: number
        market:
          type: string
        min_tick_size:
          format: double
          type: number
        name:
          type: string
        quote:
          type: string
        simple_name:
          type: string
        splits:
          type: string
        state:
          $ref: '#/components/schemas/InstrumentState'
        symbol:
          type: string
        tradability:
          type: string
        tradeable:
          type: string
        type:
          type: string
        url:
          type: string
      title: InstrumentData
      type: object
    InstrumentSplit:
      properties:
        divisor:
          type: string
        execution_date:
          type: string
        instrument:
          type: string
        multiplier:
          type: string
        url:
          type: string
      title: InstrumentSplit
      type: object
    InstrumentState:
      enum:
        - active
        - inactive
      type: string
    InvestmentExperience:
      enum:
        - extensive_investment_exp
        - good_investment_exp
        - limited_investment_exp
        - no_investment_exp
      type: string
    InvestmentObjective:
      enum:
        - cap_preserve_invest_obj
        - income_invest_obj
        - growth_invest_obj
        - speculation_invest_obj
        - other_invest_obj
      type: string
    InvestmentProfile:
      properties:
        annual_income:
          type: string
        investment_experience:
          $ref: '#/components/schemas/InvestmentExperience'
        investment_objective:
          $ref: '#/components/schemas/InvestmentObjective'
        liquid_net_worth:
          type: string
        liquidity_needs:
          $ref: '#/components/schemas/LiquidityNeeds'
        risk_tolerance:
          $ref: '#/components/schemas/RiskTolerance'
        source_of_funds:
          $ref: '#/components/schemas/SourceOfFunds'
        suitability_verified:
          type: boolean
        tax_bracket:
          $ref: '#/components/schemas/TaxBracket'
        time_horizon:
          $ref: '#/components/schemas/TimeHorizon'
        total_net_worth:
          $ref: '#/components/schemas/TotalNetWorth'
        updated_at:
          format: date-time
          type: string
        user:
          type: string
      title: InvestmentProfile
      type: object
    LiquidityNeeds:
      enum:
        - not_important_liq_need
        - somewhat_important_liq_need
        - very_important_liq_need
      type: string
    MarginBalances:
      properties:
        cash:
          format: double
          type: number
        cash_available_for_withdrawal:
          format: double
          type: number
        cash_held_for_orders:
          format: double
          type: number
        created_at:
          format: date-time
          type: string
        day_trade_buying_power:
          format: double
          type: number
        day_trade_buying_power_held_for_orders:
          format: double
          type: number
        day_trade_ratio:
          format: double
          type: number
        margin_limit:
          format: double
          type: number
        marked_pattern_day_trader_date:
          format: date-time
          type: string
        overnight_buying_power:
          format: double
          type: number
        overnight_buying_power_held_for_orders:
          format: double
          type: number
        overnight_ratio:
          format: double
          type: number
        unallocated_margin_cash:
          format: double
          type: number
        uncleared_deposits:
          format: double
          type: number
        unsettled_funds:
          format: double
          type: number
        updated_at:
          format: date-time
          type: string
      title: MarginBalances
      type: object
    MaritalStatus:
      enum:
        - single
        - married
      type: string
    MarketData:
      properties:
        acronym:
          type: string
        city:
          type: string
        country:
          type: string
        mic:
          type: string
        name:
          type: string
        operating_mic:
          type: string
        timezone:
          type: string
        todays_hours:
          type: string
        url:
          type: string
        website:
          type: string
      title: MarketData
      type: object
    MarketHours:
      properties:
        closes_at:
          format: date-time
          type: string
        date:
          format: date-time
          type: string
        extended_closes_at:
          format: date-time
          type: string
        extended_opens_at:
          format: date-time
          type: string
        is_open:
          type: boolean
        next_open_hours:
          type: string
        opens_at:
          format: date-time
          type: string
        previous_open_hours:
          type: string
      title: MarketHours
      type: object
    Movers:
      title: Movers
      type: object
    MultipleOfAccountInfo:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/AccountInfo'
          type: array
      title: MultipleOfAccountInfo
      type: object
    MultipleOfFundamentalsData:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/FundamentalsData'
          type: array
      title: MultipleOfFundamentalsData
      type: object
    MultipleOfInstrumentData:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/InstrumentData'
          type: array
      title: MultipleOfInstrumentData
      type: object
    MultipleOfInstrumentSplit:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/InstrumentSplit'
          type: array
      title: MultipleOfInstrumentSplit
      type: object
    MultipleOfMarketData:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/MarketData'
          type: array
      title: MultipleOfMarketData
      type: object
    MultipleOfMovers:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/Movers'
          type: array
      title: MultipleOfMovers
      type: object
    MultipleOfOrder:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/Order'
          type: array
      type: object
    MultipleOfPosition:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/Position'
          type: array
      title: MultipleOfPosition
      type: object
    MultipleOfQuoteData:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/QuoteData'
          type: array
      title: MultipleOfQuoteData
      type: object
    MultipleOfWatchListCreateResponse:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/WatchListCreateResponse'
          type: array
      title: MultipleOfWatchListCreateResponse
      type: object
    MultipleOfWatchListsData:
      properties:
        count:
          format: int32
          type: integer
        next:
          type: string
        previous:
          type: string
        results:
          items:
            $ref: '#/components/schemas/WatchListsData'
          type: array
      title: MultipleOfWatchListsData
      type: object
    OptionOrderInput:
      properties:
        account:
          type: string
        direction:
          type: string
        override_day_trade_checks:
          title: override_day_trade_checks
          type: boolean
        override_dtbp_checks:
          title: override_dtbp_checks
          type: boolean
        price:
          type: string
        quantity:
          type: string
        ref_id:
          type: string
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        trigger:
          $ref: '#/components/schemas/Trigger'
        type:
          title: type
          type: string
      type: object
    OptionsMarketData:
      properties:
        adjusted_mark_price:
          type: string
        ask_price:
          type: string
        ask_size:
          type: string
        bid_price:
          type: string
        bid_size:
          type: string
        break_even_price:
          type: string
        chance_of_profit_long:
          type: string
        chance_of_profit_short:
          type: string
        delta:
          type: string
        gamma:
          type: string
        high_price:
          type: string
        implied_volatility:
          type: string
        instrument:
          type: string
        last_trade_price:
          type: string
        last_trade_size:
          type: string
        low_price:
          type: string
        mark_price:
          type: string
        open_interest:
          type: string
        previous_close_date:
          type: string
        previous_close_price:
          type: string
        rho:
          type: string
        theta:
          type: string
        vega:
          type: string
        volume:
          type: string
      title: MarketData
      type: object
    Order:
      properties:
        account:
          type: string
        action:
          $ref: '#/components/schemas/OrderAction'
        average_price:
          type: string
        cancel:
          type: string
        client_id:
          type: string
        created_at:
          format: date-time
          type: string
        cumulative_quantity:
          type: string
        executions:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        extended_hours:
          type: boolean
        fees:
          type: string
        id:
          type: string
        instrument:
          type: string
        last_trail_price:
          type: string
        last_trail_price_updated_at:
          type: string
        last_transaction_at:
          format: date-time
          type: string
        override_day_trade_checks:
          type: boolean
        override_dtbp_checks:
          type: boolean
        position:
          type: string
        price:
          type: string
        quantity:
          type: string
        reject_reason:
          type: string
        side:
          type: string
        state:
          $ref: '#/components/schemas/OrderState'
        stop_price:
          type: string
        stop_triggered_at:
          type: string
        symbol:
          type: string
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        trigger:
          type: string
        type:
          $ref: '#/components/schemas/ExecutionType'
        updated_at:
          format: date-time
          type: string
        url:
          type: string
      title: Order
      type: object
    OrderAction:
      enum:
        - order
        - status
        - cancel
        - history
      type: string
    OrderResponse:
      $ref: '#/components/schemas/Order'
    OrderState:
      enum:
        - queued
        - unconfirmed
        - confirmed
        - partially_filled
        - filled
        - rejected
        - canceled
        - failed
      type: string
    Portfolio:
      properties:
        account:
          type: string
        adjusted_equity_previous_close:
          format: double
          type: number
        equity:
          format: double
          type: number
        equity_previous_close:
          format: double
          type: number
        excess_maintenance:
          format: double
          type: number
        excess_maintenance_with_uncleared_deposits:
          format: double
          type: number
        excess_margin:
          format: double
          type: number
        excess_margin_with_uncleared_deposits:
          format: double
          type: number
        extended_hours_equity:
          format: double
          type: number
        extended_hours_market_value:
          format: double
          type: number
        last_core_equity:
          format: double
          type: number
        last_core_market_value:
          format: double
          type: number
        market_value:
          format: double
          type: number
        start_date:
          type: string
        unwithdrawable_deposits:
          format: double
          type: number
        unwithdrawable_grants:
          format: double
          type: number
        url:
          type: string
        withdrawable_amount:
          format: double
          type: number
      title: Portfolio
      type: object
    Position:
      properties:
        account:
          type: string
        average_buy_price:
          format: double
          type: number
        created_at:
          format: date-time
          type: string
        instrument:
          type: string
        intraday_average_buy_price:
          format: double
          type: number
        intraday_quantity:
          format: double
          type: number
        quantity:
          format: double
          type: number
        shares_held_for_buys:
          format: double
          type: number
        shares_held_for_sells:
          format: double
          type: number
        shares_held_for_stock_grants:
          format: double
          type: number
        updated_at:
          format: date-time
          type: string
        url:
          type: string
      title: Position
      type: object
    Quote:
      properties:
        adjusted_previous_close:
          type: string
        ask_price:
          type: string
        ask_size:
          type: string
        bid_price:
          type: string
        bid_size:
          type: string
        last_extended_hours_trade_price:
          type: string
        last_trade_price:
          type: string
        previous_close:
          type: string
        previous_close_date:
          type: string
        symbol:
          type: string
        trading_halted:
          type: string
        updated_at:
          type: string
      type: object
    QuoteCurrency:
      properties:
        code:
          type: string
        id:
          title: ID
          type: string
        increment:
          title: increment
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    QuoteData:
      properties:
        adjusted_previous_close:
          type: string
        ask_price:
          type: string
        ask_size:
          format: int32
          type: integer
        bid_price:
          format: double
          type: number
        bid_size:
          format: int32
          type: integer
        last_extended_hours_trade_price:
          type: string
        last_trade_price:
          type: string
        previous_close:
          type: string
        previous_close_date:
          format: date
          type: string
        symbol:
          type: string
        trading_halted:
          type: boolean
        updated_at:
          format: date-time
          type: string
      title: QuoteData
      type: object
    RiskTolerance:
      enum:
        - low_risk_tolerance
        - med_risk_tolerance
        - high_risk_tolerance
      type: string
    SourceOfFunds:
      enum:
        - savings_personal_income
        - pension_retirement
        - insurance_payout
        - inheritance
        - gift
        - sale_business_or_property
        - other
      type: string
    TaxBracket:
      enum:
        - 0_pct
        - 20_pct
        - 25_pct
        - 28_pct
        - 33_pct
        - 35_pct
        - 39_6_pct
      type: string
    TimeHorizon:
      enum:
        - short_time_horizon
        - med_time_horizon
        - long_time_horizon
      type: string
    TimeInForce:
      enum:
        - gfd
        - gtc
        - ioc
        - opg
      type: string
    TotalNetWorth:
      enum:
        - 0_24999
        - '25000_49999'
        - '50000_64999'
        - '65000_99999'
        - '100000_149999'
        - '150000_199999'
        - '250000_499999'
        - '500000_999999'
        - 1000000_inf
      type: string
    Trigger:
      enum:
        - immediate
        - stop
      type: string
    UserId:
      properties:
        id:
          type: string
        url:
          type: string
        username:
          type: string
      title: UserId
      type: object
    UserInfo:
      properties:
        additional_info:
          type: string
        basic_info:
          type: string
        email:
          type: string
        employment:
          type: string
        first_name:
          type: string
        id:
          type: string
        id_info:
          type: string
        international_info:
          type: string
        investment_profile:
          type: string
        last_name:
          type: string
        url:
          type: string
        username:
          type: string
      title: UserInfo
      type: object
    WatchListCreateResponse:
      properties:
        name:
          type: string
        url:
          type: string
        user:
          type: string
      title: WatchListCreateResponse
      type: object
    WatchListsData:
      properties:
        created_at:
          type: string
        instrument:
          type: string
        url:
          type: string
        watchlist:
          type: string
      title: WatchListsData
      type: object
    Watchlist:
      properties:
        name:
          type: string
        url:
          type: string
        user:
          type: string
      type: object